import talib
import numpy as np

class RSIStrategy:
    
    def __init__(self, overbought_threshold = 70, oversold_threshold = 30, timeperiod = 14):
        """
        Initialize the RSI strategy object
        
        @param overbought_threshold: default value 70
        @param oversold_threshold: default value 30
        @param timeperiod: default value 14
        """
        self.overbought_threshold = 70
        self.oversold_threshold = 30
        self.timeperiod = 14
        
    
    def generate_signals(self, data):
        """
        Generate a list of trading signals 
        
        @param data: a data frame with columns of "Date" and "Close", it is generated by csv_loader
        
        @return: a list that contains trading signals: 1 for buy, -1 for sell, and 0 for hold
        """
        
        signal_list = []
        
        rsi_array = talib.RSI(data["Close"].values, timeperiod = self.timeperiod)  #data["Close"].values is a numpy array, so returned an array
        
        
        for rsi in rsi_array:
            
            if rsi > self.overbought_threshold:  # sell signal
                signal_list.append(-1)
                
            elif rsi < self.oversold_threshold:  # buy signal
                signal_list.append(1)
                
            else:
                signal_list.append(0)  # hold your position
                
                
        return signal_list